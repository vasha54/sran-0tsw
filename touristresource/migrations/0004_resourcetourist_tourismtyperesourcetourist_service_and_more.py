# Generated by Django 4.1.3 on 2023-05-26 20:57

from django.db import migrations, models
import django.db.models.constraints
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('touristresource', '0003_infrastructureaccess'),
    ]

    operations = [
        migrations.CreateModel(
            name='ResourceTourist',
            fields=[
                ('idRT', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Recurso turístico',
                'verbose_name_plural': 'Recursos turísticos',
            },
        ),
        migrations.CreateModel(
            name='TourismTypeResourceTourist',
            fields=[
                ('idTTRT', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('idResourceTourist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='touristresource.resourcetourist', verbose_name='Recurso turístico')),
                ('idTourismType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='touristresource.tourismtype', verbose_name='Tipo de turismo')),
            ],
            options={
                'verbose_name': 'Tipo de turismo del recurso turístico',
                'verbose_name_plural': 'Tipos de turismo del recurso turístico',
                'ordering': ('idResourceTourist', 'idTourismType'),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('idService', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('idResourceTourist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='touristresource.resourcetourist', verbose_name='Recurso turístico')),
                ('idSchedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='touristresource.schedule', verbose_name='Horario del servicio')),
                ('idTypeService', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='touristresource.typeservice', verbose_name='Tipo de servicio')),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
                'ordering': ('idResourceTourist', 'idTypeService', 'idSchedule'),
            },
        ),
        migrations.CreateModel(
            name='InfrastructureAccessResourceTourist',
            fields=[
                ('idIART', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('idInfrastructureAccess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='touristresource.infrastructureaccess', verbose_name='Infraestructura de acceso')),
                ('idResourceTourist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='touristresource.resourcetourist', verbose_name='Recurso turístico')),
            ],
            options={
                'verbose_name': 'Infraestructura de acceso del recurso turístico',
                'verbose_name_plural': 'Infraestructuras de accesos del recurso turístico',
                'ordering': ('idResourceTourist', 'idInfrastructureAccess'),
            },
        ),
        migrations.AddConstraint(
            model_name='tourismtyperesourcetourist',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('idResourceTourist', 'idTourismType'), name='unique_type_tourist'),
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('idResourceTourist', 'idTypeService', 'idSchedule'), name='unique_service'),
        ),
        migrations.AddConstraint(
            model_name='infrastructureaccessresourcetourist',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('idResourceTourist', 'idInfrastructureAccess'), name='unique_infrastructure_access_tourist'),
        ),
    ]
